x-function-base: &base
  restart: unless-stopped
  env_file:
    - path: .env
      required: true
  command:
    - sleep
    - infinity
  user: ${CUSTOM_USER:-1000}

x-function-php: &php
  restart: unless-stopped
  user: ${CUSTOM_USER:-1000}
  build:
    dockerfile: cli.Dockerfile
    context: .docker/local/
  working_dir: /app
  environment:
    APP_NAME: 'laravel-template-project'
  command:
    - sleep
    - infinity
  volumes:
    - ./:/app:rw
    - ./.docker/local/tests/output:/opt/phpstorm-coverage:rw
    - $HOME/.config:/home/app/.config:rw

services:
  db:
    <<: *base
    container_name: ${APP_NAME}-db
    image: postgres:latest
    user: root
    ports:
      - '${DB_PORT:-5432}:${DB_PORT:-5432}'
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_PASSWORD: ${DB_PASSWORD:-web}
      POSTGRES_DB: ${APP_NAME}
    volumes:
      - postgres:/var/lib/postgresql/
    command:
      - postgres
      - --port=${DB_PORT:-5432}

  redis:
    <<: *base
    container_name: ${APP_NAME}-redis
    image: redis:latest
    command:
      - redis-server
      - --save
      - ''
      - --appendonly
      - no
    user: root

  php:
    <<: *php
    container_name: ${APP_NAME}-php
    command:
      - sleep
      - infinity

  node:
    <<: *base
    container_name: ${APP_NAME}-node
    image: dannypas00/node:22.11.0
    user: ${CUSTOM_USER:-1000}
    ports:
      - 5174:5174
    working_dir: /app
    command:
      - npx
      - vite
      - --host
      - --port=5174
    volumes:
      - ./:/app:rw

  horizon:
    <<: *php
    container_name: ${APP_NAME}-horizon
    depends_on:
      - redis
      - db
    command:
      - php
      - artisan
      - horizon

  schedule:
    <<: *php
    container_name: ${APP_NAME}-schedule
    command:
      - php
      - artisan
      - schedule:work

  reverb:
    <<: *php
    container_name: ${APP_NAME}-reverb
    command:
      - php
      - artisan
      - reverb:start
      - --port=${REVERB_PORT:-6001}
      - --host=0.0.0.0
      - --debug
    ports:
      - '${REVERB_PORT:-6001}:6001'

  frank:
    <<: *php
    container_name: ${APP_NAME}-frank
    build:
      dockerfile: .docker/local/frankenphp.Dockerfile
      context: .
      args:
        USER: ${CUSTOM_USER:-app}
    depends_on:
      - reverb
    ports:
      - '${FRANKENPHP_PORT:-80}:8000'
    volumes:
      - ./:/app:rw
      - ./.docker/local/tests/output:/opt/phpstorm-coverage:rw
      - $HOME/.config:/home/app/.config:rw
      - caddy_data:/data
      - caddy_config:/config
    tty: true
    command:
      - php
      - artisan
      - octane:frankenphp
      - --watch
      - --caddyfile=/app/.docker/local/Caddyfile

  mailpit:
    <<: *base
    container_name: ${APP_NAME}-mailpit
    image: axllent/mailpit:latest
    command: []
    ports:
      - '${MAIL_PORT:-1025}:1025'
      - '${MAILPIT_INTERFACE_PORT:-8025}:8025'

volumes:
  postgres:
  caddy_data:
  caddy_config:
